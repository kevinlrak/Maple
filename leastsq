restart:
with(LinearAlgebra):with(plots):
leastsq:=proc(L,r,s)
local dim,leng,A,b,i,j,k,m,n,c,listVars,vectorVars,sols,left,eqs,lseqn,graphic,right,p1,p2,err;
print(`Points are`,L);
leng:=nops(L);
dim:=nops(L[1]);
A:=Matrix(1..leng,1..dim);
b:=Vector(leng);
for i from 1 to leng do
    A[i,1]:= 1;
    for j from 2 to dim do
        A[i,j]:=L[i][j-1];
    od:
    b[i]:= L[i][dim];
od:
print(A);print(b);print(Transpose(A));
left:=Transpose(A).A;print(left);
right:=Transpose(A).b;print(right);
listVars:=[];
for k from 1 to dim do
    listVars:=[op(listVars),c[k]];
od:
eqs:=GenerateEquations(left,listVars,right);print(eqs);
sols:=solve(convert(eqs,set),listVars);
assign(sols);
sols:=op(sols);
print(`Coefficients are`,op(sols));
vectorVars:=Vector(dim);
for n from 1 to dim do
    vectorVars[n]:=rhs(sols[n]):
od:
lseqn:=V=vectorVars[1]:
for m from 2 to dim do
    lseqn:=V=rhs(lseqn)+vectorVars[m]*v[m-1]:
od:
if dim = 2 then graphic:=`line` elif dim = 3 then graphic:=`plane` else graphic:=`hyper-plane`; end if;
print(cat(`Equation of Least Squares `, graphic, ` is`), lseqn);
err:=b - A.vectorVars;print(`Error b - Ax is`,err);
print(`Compute error dot A and note that zero checks that`);
print(`error b-Ax is perpendicular to the column space of A`);
print(``);
print(`error dot A is`,Transpose(err).A);
if dim = 2 then
    p1:=pointplot(L,color=orange,symbol=solidcircle,symbolsize=14):
    p2:=plot(rhs(sols[1]) + rhs(sols[2])*t,t=r..s,color=blue):
    display({p1,p2});
elif dim = 3 then
    p1:=pointplot3d(L,color=orange,symbol=solidcircle,symbolsize=14):
    p2:=plot3d(rhs(sols[1]) + rhs(sols[2])*t + rhs(sols[3])*u,t=r..s,u=r...s,color=blue,axes=boxed):
    display({p1,p2});
end if:
end proc:
leastsq([[0,1,0],[1,2,8],[3,3,8],[4,4,20]],-1,5,5);
leastsq([[0,0],[1,8],[3,8],[4,20]],-1,5);
